#!/usr/bin/env bash

if [[ $(id -u) -ne 0 ]]; then
    echo "Please run as root" 1>&2
    exit 1
fi

if ! command -v nmcli &> /dev/null; then
    echo "Not found nmcli command (network-manager)" 1>&2
    echo "The 'nmcli' command is included in the 'network-manager' package" 1>&2
    exit 1
fi

if ! command -v systemctl &> /dev/null; then
    echo "Not found systemctl command" 1>&2
    exit 1
fi

IP_INSTALL=$(dpkg --get-selections iptables-persistent | awk '{print $2}')
if [[ -z $IP_INSTALL || "$IP_INSTALL" != "install" ]]; then
    DEBIAN_FRONTEND=noninteractive \
        apt-get install -y iptables iptables-persistent

    systemctl daemon-reload
    systemctl enable iptables.service
    systemctl start iptables.service
fi

IPTABLES_V4_RULES=/etc/iptables/rules.v4
IPTABLES_V6_RULES=/etc/iptables/rules.v6

if [[ ! -f "$IPTABLES_V4_RULES" ]]; then
    echo "Not found iptables v4 rules file: '$IPTABLES_V4_RULES'" 1>&2
    exit 1
fi

if [[ ! -f "$IPTABLES_V6_RULES" ]]; then
    echo "Not found iptables v6 rules file: '$IPTABLES_V6_RULES'" 1>&2
    exit 1
fi

IPTABLES_SAVE=$(command -v iptables-save 2> /dev/null)
if [[ -z "$IPTABLES_SAVE" ]]; then
    IPTABLES_SAVE="/sbin/iptables-save"
    if [[ ! -x "$IPTABLES_SAVE" ]]; then
        echo "Not found iptables-save command" 1>&2
        exit 1
    fi
fi

IP6TABLES_SAVE=$(command -v ip6tables-save 2> /dev/null)
if [[ -z "$IP6TABLES_SAVE" ]]; then
    IP6TABLES_SAVE="/sbin/ip6tables-save"
    if [[ ! -x "$IP6TABLES_SAVE" ]]; then
        echo "Not found ip6tables-save command" 1>&2
        exit 1
    fi
fi

if ! command -v opm-home &> /dev/null; then
PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")/../../../bin" || exit; pwd):$PATH"
fi

if ! command -v opm-home &> /dev/null; then
    echo "Not found opm-home command" 1>&2
    exit 1
fi

ETHERNET_NAME=$(
    nmcli device 2>&1 | \
    grep --color=never ethernet | \
    grep --color=never connected | \
    awk '{print $1}'
)
LOOPBACK_NAME=$(
    nmcli device 2>&1 | \
    grep --color=never loopback | \
    awk '{print $1}'
)

if [[ -z $ETHERNET_NAME ]]; then
    echo "Not found ethernet device" 1>&2
    exit 1
fi
if [[ -z $LOOPBACK_NAME ]]; then
    echo "Not found loopback device" 1>&2
    exit 1
fi

read -r -p "Your ethernet device name is '$ETHERNET_NAME' ? (y/n) " E_ANSWER
if [[ ${E_ANSWER,,} != 'y' ]]; then
    echo "Job canceled" 1>&2
    exit 1
fi

read -r -p "Your loopback device name is '$LOOPBACK_NAME' ? (y/n) " L_ANSWER
if [[ ${L_ANSWER,,} != 'y' ]]; then
    echo "Job canceled" 1>&2
    exit 1
fi

NOW=$(date "+%Y%m%d_%H%M%S")
BACKUP_DIR=$(opm-home)/var/iptables/backups

if [[ ! -d "$BACKUP_DIR" ]]; then
    mkdir -vp "$BACKUP_DIR"
fi

if [[ -n $SUDO_GID && -n $SUDO_UID ]]; then
    HAS_SUDOER=1
else
    HAS_SUDOER=0
fi

BACKUP_ORIGINAL_V4_FILE="$BACKUP_DIR/iptables-file-$NOW.rules"
BACKUP_ORIGINAL_V6_FILE="$BACKUP_DIR/ip6tables-file-$NOW.rules"

cp -v "$IPTABLES_V4_RULES" "$BACKUP_ORIGINAL_V4_FILE"
cp -v "$IPTABLES_V6_RULES" "$BACKUP_ORIGINAL_V6_FILE"

if [[ $HAS_SUDOER -eq 1 ]]; then
    chown "$SUDO_GID:$SUDO_UID" "$BACKUP_ORIGINAL_V4_FILE"
    chown "$SUDO_GID:$SUDO_UID" "$BACKUP_ORIGINAL_V6_FILE"
fi

BACKUP_V4_FILE="$BACKUP_DIR/iptables-save-$NOW.rules"
BACKUP_V6_FILE="$BACKUP_DIR/ip6tables-save-$NOW.rules"

if ! "$IPTABLES_SAVE" > "$BACKUP_V4_FILE"; then
    echo "iptables-save backup failed" 1>&2
    exit 1
fi
if [[ $HAS_SUDOER -eq 1 ]]; then
    chown "$SUDO_GID:$SUDO_UID" "$BACKUP_V4_FILE"
fi

if ! "$IP6TABLES_SAVE" > "$BACKUP_V6_FILE"; then
    echo "ip6tables-save backup failed" 1>&2
    exit 1
fi
if [[ $HAS_SUDOER -eq 1 ]]; then
    chown "$SUDO_GID:$SUDO_UID" "$BACKUP_V6_FILE"
fi

BACKUP_V4_FILE_LATEST="$BACKUP_DIR/iptables.latest.rules"
BACKUP_V6_FILE_LATEST="$BACKUP_DIR/ip6tables.latest.rules"

if ! ln -sf "$BACKUP_V4_FILE" "$BACKUP_V4_FILE_LATEST"; then
    echo "Failed to create v4 latest symlink" 1>&2
    exit 1
fi
if [[ $HAS_SUDOER -eq 1 ]]; then
    chown -h "$SUDO_GID:$SUDO_UID" "$BACKUP_V4_FILE_LATEST"
fi

if ! ln -sf "$BACKUP_V6_FILE" "$BACKUP_V6_FILE_LATEST"; then
    echo "Failed to create v6 latest symlink" 1>&2
    exit 1
fi
if [[ $HAS_SUDOER -eq 1 ]]; then
    chown -h "$SUDO_GID:$SUDO_UID" "$BACKUP_V6_FILE_LATEST"
fi

IPTABLES_SERVER_FILTER="
# Generated by opm's setup script: $NOW

# Set a default policy of DROP
*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT DROP [0:0]

# Accept any related or established connections
-I INPUT 1 -m state --state RELATED,ESTABLISHED -j ACCEPT
-I OUTPUT 1 -m state --state RELATED,ESTABLISHED -j ACCEPT

# Allow all traffic on the loopback interface
-A INPUT -i $LOOPBACK_NAME -j ACCEPT
-A OUTPUT -o $LOOPBACK_NAME -j ACCEPT

# Allow outbound DHCP request
-A OUTPUT -o $ETHERNET_NAME -p udp --dport 67:68 --sport 67:68 -j ACCEPT

# Allow inbound SSH
-A INPUT -i $ETHERNET_NAME -p tcp -m tcp --dport 22 -m state --state NEW  -j ACCEPT

# Allow outbound email
-A OUTPUT -o $ETHERNET_NAME -p tcp -m tcp --dport 25 -m state --state NEW  -j ACCEPT

# Outbound DNS lookups
-A OUTPUT -o $ETHERNET_NAME -p udp -m udp --dport 53 -j ACCEPT

# Outbound PING requests
-A OUTPUT -o $ETHERNET_NAME -p icmp -j ACCEPT

# Outbound Network Time Protocol (NTP) requests
-A OUTPUT -o $ETHERNET_NAME -p udp --dport 123 --sport 123 -j ACCEPT

# Outbound HTTP
-A OUTPUT -o $ETHERNET_NAME -p tcp -m tcp --dport 80 -m state --state NEW -j ACCEPT
-A OUTPUT -o $ETHERNET_NAME -p tcp -m tcp --dport 443 -m state --state NEW -j ACCEPT

COMMIT
"

IP6TABLES_SERVER_FILTER="
*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT DROP [0:0]
COMMIT

*raw
:PREROUTING DROP [0:0]
:OUTPUT DROP [0:0]
COMMIT

*nat
:PREROUTING DROP [0:0]
:INPUT DROP [0:0]
:OUTPUT DROP [0:0]
:POSTROUTING DROP [0:0]
COMMIT

*security
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT DROP [0:0]
COMMIT

*mangle
:PREROUTING DROP [0:0]
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT DROP [0:0]
:POSTROUTING DROP [0:0]
COMMIT
"

read -r -p "Do you really apply filters? (y/n) " F_ANSWER
if [[ ${F_ANSWER,,} != 'y' ]]; then
    echo "Job canceled" 1>&2
    exit 1
fi

echo "$IPTABLES_SERVER_FILTER" > "$IPTABLES_V4_RULES"
echo "$IP6TABLES_SERVER_FILTER" > "$IPTABLES_V6_RULES"

systemctl restart iptables.service
exit 0
