version: '3.3'

services:
  portus:
    image: opensuse/portus:2.4.3
    depends_on:
      - db
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-net"
        - "traefik.port=3000"
        - "traefik.frontend.rule=Host:${FRONTEND_HOST:?err}"
    networks:
      - traefik-net
      - net
    secrets:
      - portus-web-keybase
      - portus-web-pw
      - portus-db-pw
    environment:
      PORTUS_MACHINE_FQDN_VALUE: ${FRONTEND_HOST}

      # DB
      PORTUS_DB_HOST: db
      PORTUS_DB_DATABASE: portus_production
      PORTUS_DB_PASSWORD_FILE: /run/secrets/portus-db-pw
      PORTUS_DB_POOL: 5

      # Secrets
      PORTUS_SECRET_KEY_BASE_FILE: /run/secrets/portus-web-keybase
      PORTUS_PASSWORD_FILE: /run/secrets/portus-web-pw
      PORTUS_KEY_PATH: /certs/portus.key

      # SSL
      PORTUS_CHECK_SSL_USAGE_ENABLED: 'false'
      #PORTUS_PUMA_TLS_KEY: /certs/portus.key
      #PORTUS_PUMA_TLS_CERT: /certs/portus.crt

      # etc
      RAILS_SERVE_STATIC_FILES: 'true'
    volumes:
      - /opt/opm/portus/certs:/certs:ro

  background:
    image: opensuse/portus:2.4.3
    depends_on:
      - db
      - portus
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    networks:
      - net
    secrets:
      - portus-web-keybase
      - portus-web-pw
      - portus-db-pw
    environment:
      CCONFIG_PREFIX: PORTUS
      PORTUS_MACHINE_FQDN_VALUE: ${FRONTEND_HOST}

      # DB
      PORTUS_DB_HOST: db
      PORTUS_DB_DATABASE: portus_production
      PORTUS_DB_PASSWORD_FILE: /run/secrets/portus-db-pw
      PORTUS_DB_POOL: 5

      # Secrets
      PORTUS_SECRET_KEY_BASE_FILE: /run/secrets/portus-web-keybase
      PORTUS_PASSWORD_FILE: /run/secrets/portus-web-pw
      PORTUS_KEY_PATH: /certs/portus.key

      # etc
      PORTUS_BACKGROUND: 'true'
    volumes:
      - /opt/opm/portus/certs:/certs:ro

  db:
    #image: library/mariadb:10.0.23
    image: mariadb
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    networks:
      - net
    secrets:
      - portus-db-pw
    environment:
      MYSQL_DATABASE: portus_production
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/portus-db-pw
    #command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --init-connect='SET NAMES UTF8;' --innodb-flush-log-at-trx-commit=0
    command: mysqld
    volumes:
      - /opt/opm/portus/db/portus.cnf:/etc/mysql/conf.d/portus.cnf:ro

  registry:
    image: registry:2.6
    depends_on:
      - s3
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    networks:
      - net
    #secrets:
    #  - portus-minio-id  # Write directly to the 'config.yml' file.
    #  - portus-minio-pw  # Write directly to the 'config.yml' file.
    volumes:
      - /opt/opm/traefik/certs/traefik.crt:/certs/portus.crt:ro
      - /opt/opm/traefik/certs/traefik.key:/certs/portus.key:ro
      - /opt/opm/portus/registry/config.yml:/etc/docker/registry/config.yml:ro
      - /opt/opm/portus/registry/init:/etc/docker/registry/init:ro
    ports:
      - 5000:5000
      - 5001:5001 # required to access debug service

  s3:
    image: minio/minio
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    networks:
      - net
    secrets:
      - portus-minio-id
      - portus-minio-pw
    environment:
      MINIO_ACCESS_KEY_FILE: portus-minio-id
      MINIO_SECRET_KEY_FILE: portus-minio-pw
    volumes:
      # - minio_data:/buckets
      - ${MINIO_DATA_MOUNT_POINT?err}:/buckets
    command: ["server", "/buckets"]

# "no suitable node (missing plugin on 1 node)"
#volumes:
#  minio_data:
#    driver: local-persist
#    driver_opts:
#      mountpoint: "${MINIO_DATA_MOUNT_POINT?err}"

secrets:
  portus-minio-id:
    external: true
  portus-minio-pw:
    external: true
  portus-web-keybase:
    external: true
  portus-web-pw:
    external: true
  portus-db-pw:
    external: true

networks:
  traefik-net:
    external: true
  net:
    driver: overlay

