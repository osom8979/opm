#!/usr/bin/env bash

if ! command -v opm-version &> /dev/null; then
PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" || exit; pwd):$PATH"
fi

if ! command -v ssh-agent &> /dev/null; then
    opm-println-error "Not found ssh-agent command"
    exit 1
fi

if ! command -v ssh-add &> /dev/null; then
    opm-println-error "Not found ssh-add command"
    exit 1
fi

export OPY_SUFFIX=sagecipher
export OPY_VERSION=${OPY_VERSION:-$(opm-variable OPY_VERSION)}
export OPY_VERBOSE=${OPY_VERBOSE:-$(opm-variable OPY_VERBOSE)}

USAGE="
Usage: opy-sagecipher [options] {encrypt|decrypt} {data}

Available options are:
  -h, --help     Print this message
  -v, --verbose  Be more verbose/talkative during the operation.
  --             Skip handling options
  -              Just check the prerequisites.
"

PYTHON_ENCRYPT_ARGV="
from sys import argv, stdout
from sagecipher import Cipher
stdout.write(Cipher.encrypt_string(argv[1]).hex())
"

PYTHON_ENCRYPT_PIPE="
from sys import stdin, stdout
from sagecipher import Cipher
data = stdin.buffer.read()
stdout.write(Cipher.encrypt_string(data).hex())
"

PYTHON_DECRYPT_ARGV="
from sys import argv, stdout
from sagecipher import Cipher
data = bytearray.fromhex(argv[1])
stdout.write(Cipher.decrypt_string(data))
"

PYTHON_DECRYPT_PIPE="
from sys import stdin, stdout
from sagecipher import Cipher
data = stdin.buffer.read().decode('Latin-1')
stdout.write(Cipher.decrypt_string(bytearray.fromhex(data)))
"

VERBOSE=0

function kill_ssh_agent
{
    if [[ $VERBOSE -eq 1 ]]; then
        ssh-agent -k
    else
        ssh-agent -k &> /dev/null
    fi
}

function exec_ssh_agent
{
    if [[ $VERBOSE -eq 1 ]]; then
        # shellcheck disable=SC1090
        source <(ssh-agent)
    else
        # shellcheck disable=SC1090
        source <(ssh-agent) &> /dev/null
    fi
}

function print_usage
{
    echo "$USAGE"
}

function opy_sagecipher_encrypt
{
    if [[ -z "$1" ]]; then
        opy -c "$PYTHON_ENCRYPT_PIPE"
    else
        opy -c "$PYTHON_ENCRYPT_ARGV" "$1"
    fi
}

function opy_sagecipher_decrypt
{
    if [[ -z "$1" ]]; then
        opy -c "$PYTHON_DECRYPT_PIPE" "$1"
    else
        opy -c "$PYTHON_DECRYPT_ARGV" "$1"
    fi
}

function opy_sagecipher_main
{
    if ! opy-checked-install sagecipher; then
        return $?
    fi

    while [[ -n $1 ]]; do
        case $1 in
        -h|--help)
            print_usage
            return 0
            ;;
        -v|--verbose)
            export VERBOSE=1
            shift
            ;;
        --)
            shift
            break
            ;;
        -)
            return 0
            ;;
        *)
            break
            ;;
        esac
    done

    local op=$1
    local data=$2
    shift 2

    if [[ -z $op ]]; then
        opm-println-error -v "Empty operation argument"
        return 1
    fi

    case $op in
    e|enc|encrypt)
        # lazy evaluation
        ;;
    d|dec|decrypt)
        # lazy evaluation
        ;;
    *)
        opm-println-error -v "Unexpected operation '$op'"
        return 1
        ;;
    esac

    if [[ -z $SSH_AGENT_PID ]]; then
        if ! exec_ssh_agent; then
            opm-println-error -v "The ssh-agent command terminated abnormally: $?"
            return 1
        fi

        trap 'kill_ssh_agent' EXIT

        if ! ssh-add &> /dev/null; then
            opm-println-error -v "The ssh-add command terminated abnormally: $?"
            kill_ssh_agent
            return 1
        fi
    fi

    case $op in
    e|enc|encrypt)
        opy_sagecipher_encrypt "$data"
        ;;
    d|dec|decrypt)
        opy_sagecipher_decrypt "$data"
        ;;
    esac
}

opy_sagecipher_main "$@"
