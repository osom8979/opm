#!/usr/bin/env bash

if [[ -z $(which opm-version 2> /dev/null) ]]; then
OPM_BIN_PATH=`cd "$(dirname "${BASH_SOURCE[0]}")"; echo "$PWD"`
PATH="$OPM_BIN_PATH:$PATH"
fi

function getmanager_darwin_brew
{
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
}

function which_darwin_brew
{
    which brew 2> /dev/null
}

function sync_darwin_brew
{
    if [[ -z $(which_darwin_brew) ]]; then
        opm-println-error "Not found brew command."
        return 1
    fi

    brew update
}

function exist_darwin_brew
{
    if [[ -z $(which_darwin_brew) ]]; then
        opm-println-error "Not found brew command."
        return 1
    fi
    if [[ $# -eq 0 ]]; then
        opm-println-error "You must enter the package."
        return 1
    fi

    local packages=`brew list -1`
    for i in $@; do
        echo "$packages" | grep "^$i\$"
    done
}

function list_darwin_brew
{
    if [[ -z $(which_darwin_brew) ]]; then
        opm-println-error "Not found brew command."
        return 1
    fi
    if [[ $# -eq 0 ]]; then
        opm-println-error "You must enter the package."
        return 1
    fi

    for i in $@; do
        brew ls --verbose $i | sed "s/^/$i /g"
    done
}

function install_darwin_brew
{
    if [[ -z $(which_darwin_brew) ]]; then
        opm-println-error "Not found brew command."
        return 1
    fi
    if [[ $# -eq 0 ]]; then
        opm-println-error "You must enter the package."
        return 1
    fi

    brew install "$@"
}

function remove_darwin_brew
{
    if [[ -z $(which_darwin_brew) ]]; then
        opm-println-error "Not found brew command."
        return 1
    fi
    if [[ $# -eq 0 ]]; then
        opm-println-error "You must enter the package."
        return 1
    fi

    brew uninstall "$@"
}

