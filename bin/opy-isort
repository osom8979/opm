#!/usr/bin/env bash

if ! command -v opm-version &> /dev/null; then
PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" || exit; pwd):$PATH"
fi

USAGE="
Usage: ${BASH_SOURCE[0]} [options] ...

Available options are:
  -h, --help    Print this message.
  --fix         Edit files in place.
  --disable-defaults
                Disable default settings
  --skip-installation-check
                Skip package installation verification.
  --            Stop handling options.
  ...           Command-line arguments for isort.
"

function opy_isort_main
{
    local fix=0
    local disable_defaults=0
    local skip_installation_check=0

    while [[ -n $1 ]]; do
        case $1 in
        -h|--help)
            echo "$USAGE"
            exit 0
            ;;
        --fix)
            fix=1
            shift
            ;;
        --disable-defaults)
            disable_defaults=1
            shift
            ;;
        --skip-installation-check)
            skip_installation_check=1
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            break
            ;;
        esac
    done

    local args=()
    local src_paths=()

    if [[ $disable_defaults -eq 0 ]]; then
        args+=("--skip-gitignore" "--profile=black" "--py=auto")

        mapfile -t src_paths < <(
            find . -name '*.py' | sed -e 's/^\.\///g' | awk -F/ '{print($1)}' | sort | uniq
        )

        if [[ ${#src_paths[@]} -ge 1 ]]; then
            args+=("--src-path" "$(IFS=,; echo "${src_paths[*]}")")
        fi
    fi

    if [[ $fix -eq 0 ]]; then
        args+=("--check" "--diff" "--color")
    fi

    if [[ $skip_installation_check -eq 0 ]]; then
        opy-checked-install isort colorama
    fi

    opm-println-info isort "${args[@]}" "$@"
    opy -m isort "${args[@]}" "$@"
}

opy_isort_main "$@"
