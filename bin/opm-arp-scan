#!/usr/bin/env bash

if [[ -z $(which opm-version 2> /dev/null) ]]; then
PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" || exit; pwd):$PATH"
fi

ARP_SCAN_CANDIDATE0=$(which arp-scan 2> /dev/null)
ARP_SCAN_CANDIDATE1=/sbin/arp-scan
ARP_SCAN_CANDIDATE2=/usr/sbin/arp-scan
if [[ -n "$ARP_SCAN_CANDIDATE0" ]]; then
    ARP_SCAN_PATH="$ARP_SCAN_CANDIDATE0"
elif [[ -f "$ARP_SCAN_CANDIDATE1" ]]; then
    ARP_SCAN_PATH="$ARP_SCAN_CANDIDATE1"
elif [[ -f "$ARP_SCAN_CANDIDATE2" ]]; then
    ARP_SCAN_PATH="$ARP_SCAN_CANDIDATE2"
else
    opm-println-error "Not found arp-scan"
    return 1
fi

function restore_permission_trap
{
    sudo chmod -x "$ARP_SCAN_PATH"
}

function exit_on_error
{
    local code=$?
    if [[ $code -ne 0 ]]; then
        exit $code
    fi
}

if [[ ! -x $ARP_SCAN_PATH ]]; then
    trap restore_permission_trap INT
    sudo chmod +x "$ARP_SCAN_PATH"
    exit_on_error
fi

if [[ ${#@} -eq 0 ]]; then
    sudo arp-scan --localnet
else
    sudo arp-scan "$@"
fi

restore_permission_trap
