#!/usr/bin/env bash

if ! command -v opm-version &> /dev/null; then
PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" || exit; pwd):$PATH"
fi

# shellcheck disable=SC2155
STORAGE_DIR=$(opm-home)/var/git-credential

USAGE="
Usage: opy-git-credential [options] {get|store|erase}

Available options are:
  -h, --help     Print this message
  -v, --verbose  Be more verbose/talkative during the operation.
  --             Skip handling options
"

function print_usage
{
    echo "$USAGE"
}

function opy_git_credential_get
{
    local protocol=$1
    local host=$2

    local storage="$STORAGE_DIR/$protocol-$host"
    if [[ ! -f "$storage" ]]; then
        opm-println-error -v "Not found storage file: '$storage'"
        return 1
    fi

    if ! opy-sagecipher decrypt "$(cat "$storage")"; then
        opm-println-error -v "Decryption failed"
        return 1
    fi
}

function opy_git_credential_store
{
    local protocol=$1
    local host=$2
    local username=$3
    local password=$4

    local storage="$STORAGE_DIR/$protocol-$host"
    local data="username=$username\npassword=$password"

    if ! opy-sagecipher encrypt "$(echo -e "$data")" > "$storage"; then
        opm-println-error -v "Encryption failed"
        return $?
    fi
}

function opy_git_credential_erase
{
    local protocol=$1
    local host=$2

    local storage="$STORAGE_DIR/$protocol-$host"
    if [[ ! -f "$storage" ]]; then
        opm-println-error -v "Not found storage file: '$storage'"
        return 1
    fi

    rm "$storage"
}

function opy_git_credential_main
{
    if [[ ! -d "$STORAGE_DIR" ]]; then
        if ! mkdir -p "$STORAGE_DIR"; then
            return $?
        fi
    fi

    while [[ -n $1 ]]; do
        case $1 in
        -h|--help)
            print_usage
            return 0
            ;;
        -v|--verbose)
            export VERBOSE=1
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            break
            ;;
        esac
    done

    local op=$1
    shift

    if [[ "$op" != get && "$op" != store && "$op" != erase ]]; then
        print_usage
        return 1
    fi

    local protocol
    local host
    local username
    local password

    while read -r line; do
        case $line in
        protocol=*)
            protocol=${line:9}
            ;;
        host=*)
            host=${line:5}
            ;;
        username=*)
            username=${line:9}
            ;;
        password=*)
            password=${line:9}
            ;;
        *)
            return 1
            ;;
        esac
    done

    case $op in
    get)
        opy_git_credential_get "$protocol" "$host"
        ;;
    store)
        opy_git_credential_store "$protocol" "$host" "$username" "$password"
        ;;
    erase)
        opy_git_credential_erase "$protocol" "$host" "$username" "$password"
        ;;
    esac
}

opy_git_credential_main "$@"
