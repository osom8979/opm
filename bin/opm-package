#!/usr/bin/env bash

if [[ -z $(which opm-version 2> /dev/null) ]]; then
OPM_BIN_PATH=`cd "$(dirname "${BASH_SOURCE[0]}")"; echo "$PWD"`
PATH="$OPM_BIN_PATH:$PATH"
fi

USAGE_MESSAGE="
Package manager.

  Usage: opm-package [options] [command] packages ...

Available options are:
  -h, --help        Print this message.
  -m {name}, --manager={name}
                    Select a package manager.
  -v, --verbose     Be more verbose/talkative during the operation.
  --                Skip handling options.

Available command are:
  get-manager   Install the package-manager.
  which         Shows the full path of package-manager commands.
  sync|update   Synchronize the database.
  exist|exists|test
                Query for package existence.
  list          List all files owned by a given package.
  install       Install the package.
  erase|remove  Remove the package.
"

function find_target
{
    local kernel_name=$(opm-distribution -k)
    if [[ $kernel_name == darwin ]]; then
        echo "darwin_brew"
    elif [[ $kernel_name == linux ]]; then
        local distribution=$(opm-distribution -i)
        case $distribution in
        arch)
            echo "linux_arch_pacman"
            ;;
        ubuntu)
            echo "linux_ubuntu_apt"
            ;;
        *)
            opm-println-error "Unsupported distribution: $distribution"
            return 1
            ;;
        esac
    else
        echo $kernel_name
    fi
}

function get_target_with_manager
{
    local manager=$1
    if [[ -z $manager ]]; then
        opm-println-error "Requires manager argument."
        return 1
    fi

    case $manager in
    pacman)
        echo "linux_arch_pacman"
        ;;
    dpkg|apt|apt-get)
        echo "linux_ubuntu_apt"
        ;;
    brew)
        echo "darwin_brew"
        ;;
    *)
        opm-println-error "Unsupported manager argument: $manager"
        return 1
        ;;
    esac
}

function package_main
{
    local manager
    local verbose_flag=0

    while [[ ! -z $1 ]]; do
        case $1 in
        -h|--help)
            opm-println "$USAGE_MESSAGE"
            return 0
            ;;
        --manager=*)
            manager=${1:3}
            shift
            ;;
        -m)
            manager=${2}
            shift 2
            ;;
        -v|--verbose)
            verbose_flag=1
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            break
            ;;
        esac
    done

    local target
    if [[ -n $manager ]]; then
        target=$(get_target_with_manager $manager)
    else
        target=$(find_target)
    fi
    local code_of_target=$?
    if [[ $code_of_target -ne 0 ]]; then
        return $code_of_target
    fi

    VERBOSE=$verbose_flag opm-println -v -i "Selected target name: $target"

    local target_source_name=opm-package-${target//_/-}
    local which_target_source=$(which $target_source_name 2> /dev/null)
    if [[ -z $which_target_source ]]; then
        opm-println-error "Not found target source: $target_source_name"
        return 1
    fi

    source "$which_target_source"

    if [[ $# -eq 0 ]]; then
        opm-println-error "You must enter the command."
        return 1
    fi

    local command=$1
    shift

    case $command in
    get-manager)
        getmanager_${target}
        ;;
    which)
        which_${target}
        ;;
    sync|update)
        sync_${target}
        ;;
    exist|exists|test)
        exist_${target} "$@"
        ;;
    list)
        list_${target} "$@"
        ;;
    install)
        install_${target} "$@"
        ;;
    erase|remove)
        ${command}_${target} "$@"
        ;;
    *)
        opm-println-error "Invalid command: $command"
        return 1
        ;;
    esac
}

package_main "$@"

